var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.45,1,1.834]],["body/modules/AppModule.html",[0,1.986,1,3.403,2,1.472,3,1.986,4,2.487,5,2.487,6,2.588,7,0.04,8,2.899,9,2.513,10,1.863,11,1.863,12,0.483,13,0.42,14,0.42,15,3.029,16,2.873,17,0.937,18,0.866,19,3.029,20,2.13,21,1.32,22,1.442,23,3.029,24,2.487,25,3.029,26,0.549,27,2.487,28,3.029,29,3.029,30,3.029,31,3.029,32,3.029,33,3.029,34,1.32,35,3.029,36,1.65,37,3.029,38,3.029,39,3.029,40,1.863,41,3.029,42,2.873,43,3.029,44,0.483,45,0.154,46,0.028,47,0.028]],["title/controllers/AuthController.html",[48,1.625,49,1.834]],["body/controllers/AuthController.html",[7,0.041,12,0.468,13,0.408,14,0.408,17,0.825,18,0.84,26,0.726,44,0.468,45,0.149,46,0.027,47,0.027,48,1.599,49,2.46,50,1.599,51,2.411,52,2.411,53,2.937,54,0.408,55,1.744,56,3.736,57,3.285,58,2.411,59,2.764,60,1.744,61,4.002,62,1.027,63,2.937,64,1.744,65,1.744,66,1.568,67,1.744,68,2.13,69,2.411,70,4.002,71,2.937,72,3.285,73,2.411,74,2.065,75,2.065,76,2.212,77,2.411,78,2.937,79,2.411,80,2.937,81,1.744,82,2.937,83,2.937]],["title/classes/AuthCredentialsDto.html",[45,0.151,59,1.45]],["body/classes/AuthCredentialsDto.html",[7,0.04,12,0.524,13,0.456,14,0.456,17,0.596,26,0.782,34,2.099,36,2.892,44,0.524,45,0.219,46,0.029,47,0.029,54,0.456,59,2.097,60,1.88,62,1.108,84,1.597,85,3.954,86,2.698,87,1.691,88,1.625,89,3.287,90,4.314,91,4.314,92,4.314,93,4.314,94,3.287,95,3.287,96,3.287,97,4.816,98,3.287,99,3.287,100,3.287,101,2.021,102,4.314,103,3.287,104,3.287,105,3.287]],["title/modules/AuthModule.html",[0,1.45,6,1.45]],["body/modules/AuthModule.html",[0,1.863,2,1.341,3,1.863,6,2.671,7,0.041,9,2.357,10,1.696,11,1.696,12,0.44,13,0.383,14,0.383,16,1.939,17,0.982,18,0.789,20,1.939,21,1.202,44,0.44,45,0.14,46,0.026,47,0.026,49,2.708,50,2.087,76,2.515,77,2.265,106,2.265,107,2.265,108,2.265,109,3.089,110,2.759,111,3.147,112,3.833,113,2.759,114,1.341,115,1.939,116,3.833,117,1.696,118,2.759,119,1.939,120,2.759,121,2.759,122,2.759,123,1.696,124,2.759,125,3.147,126,2.265,127,2.759,128,2.759,129,2.759,130,2.759]],["title/injectables/AuthService.html",[76,1.45,131,1.3]],["body/injectables/AuthService.html",[7,0.041,12,0.358,13,0.312,14,0.312,17,0.906,18,0.642,21,0.979,26,0.712,34,1.711,36,1.223,44,0.358,45,0.114,46,0.023,47,0.023,54,0.312,55,1.442,56,3.224,57,2.715,58,1.844,59,2.622,62,1.008,64,1.711,65,1.711,66,1.539,67,1.442,68,1.888,69,2.715,74,1.579,75,1.579,76,1.607,81,1.711,88,0.714,114,2.348,115,1.579,119,1.579,123,1.381,131,1.442,132,1.381,133,1.844,134,2.631,135,2.325,136,1.844,137,4.995,138,2.246,139,2.246,140,2.246,141,1.844,142,1.579,143,2.325,144,1.801,145,1.844,146,1.844,147,2.325,148,2.246,149,2.105,150,1.442,151,2.034,152,1.844,153,2.246,154,2.246,155,2.246,156,1.844,157,3.308,158,2.246,159,1.223,160,1.091,161,2.246,162,2.246,163,2.246,164,2.246]],["title/classes/CreateProductDto.html",[45,0.151,165,1.45]],["body/classes/CreateProductDto.html",[7,0.04,12,0.468,13,0.408,14,0.408,17,0.726,22,1.037,26,0.996,44,0.468,45,0.203,46,0.027,47,0.027,54,0.408,60,2.13,62,1.313,84,1.427,87,1.568,88,1.677,101,1.806,165,1.945,166,4.331,167,2.411,168,2.478,169,2.799,170,3.2,171,3.2,172,5.399,173,2.937,174,2.937,175,2.937,176,3.285,177,2.937,178,2.937,179,2.478,180,2.937,181,2.937,182,1.806,183,2.411,184,4.002,185,2.411]],["title/interfaces/JwtPayload.html",[144,1.625,186,1.834]],["body/interfaces/JwtPayload.html",[7,0.039,12,0.648,13,0.564,14,0.564,26,0.737,34,2.408,44,0.648,46,0.034,47,0.034,54,0.564,87,1.934,88,1.689,144,2.687,186,2.5,187,4.065,188,3.337,189,3.337]],["title/injectables/JwtStrategy.html",[109,1.625,131,1.3]],["body/injectables/JwtStrategy.html",[7,0.041,12,0.417,13,0.363,14,0.363,17,0.949,18,0.749,21,1.141,26,0.67,34,1.61,44,0.417,45,0.133,46,0.025,47,0.025,54,0.363,55,1.61,62,0.949,64,1.61,65,1.61,66,1.448,67,1.141,68,1.61,81,1.141,109,2.012,114,2.474,115,1.841,117,1.61,123,2.272,125,2.15,126,2.15,131,1.61,132,1.61,134,2.332,135,2.598,136,2.15,141,3.034,142,1.841,144,2.533,145,2.15,146,2.15,147,1.841,149,1.796,150,2.138,151,1.61,152,2.15,156,3.034,159,1.426,160,1.273,190,2.15,191,3.695,192,2.619,193,3.695,194,2.619,195,2.619,196,2.619,197,2.619,198,2.15,199,2.15,200,1.841,201,2.619,202,2.619,203,2.619,204,2.619,205,2.619]],["title/entities/Product.html",[22,1.053,206,1.625]],["body/entities/Product.html",[7,0.04,12,0.416,13,0.362,14,0.362,17,0.668,22,1.509,26,1.019,40,1.605,44,0.416,45,0.132,46,0.025,47,0.025,54,0.362,60,2.216,62,1.306,87,1.445,88,1.697,168,2.328,169,2.628,170,3.005,171,3.005,176,3.026,179,2.328,182,1.605,206,2.007,207,2.142,208,2.328,209,4.274,210,5.085,211,5.085,212,3.026,213,2.61,214,3.026,215,2.61,216,3.687,217,2.61,218,3.687,219,2.61,220,3.687,221,2.61,222,4.175,223,2.61,224,2.142,225,1.421]],["title/controllers/ProductsController.html",[48,1.625,226,1.834]],["body/controllers/ProductsController.html",[7,0.041,12,0.214,13,0.186,14,0.54,17,0.832,18,0.384,22,0.78,26,0.746,42,0.943,44,0.214,45,0.068,46,0.015,47,0.015,48,0.73,50,0.73,52,1.101,54,0.186,55,0.963,60,1.873,62,1.104,64,1.793,65,1.793,66,1.612,67,1.873,68,2.093,72,1.814,73,2.314,79,1.101,81,1.941,88,1.527,117,0.825,134,1.535,149,1.37,159,0.73,160,0.652,165,2.165,169,1.359,179,0.73,182,0.825,208,2.118,226,1.359,227,1.101,228,1.203,229,1.554,230,1.554,231,2.819,232,1.554,233,1.554,234,3.269,235,2.21,236,1.982,237,0.943,238,1.341,239,0.943,240,2.21,241,1.341,242,1.341,243,3.615,244,3.269,245,2.21,246,1.341,247,3.269,248,0.943,249,2.21,250,1.341,251,0.943,252,1.589,253,1.341,254,1.554,255,2.21,256,1.341,257,1.341,258,2.819,259,2.21,260,1.341,261,1.341,262,2.21,263,0.943,264,2.298,265,2.21,266,1.341,267,1.101,268,1.341,269,1.341,270,1.341,271,1.101,272,1.341,273,1.341,274,2.21,275,1.37,276,1.101,277,0.943,278,0.943,279,0.943,280,0.943,281,0.943,282,2.314,283,1.341,284,1.101,285,2.21,286,1.101,287,1.341,288,1.341,289,1.341,290,1.341,291,1.341,292,1.341,293,1.341,294,1.341,295,1.341,296,1.341,297,1.341,298,1.341,299,1.341,300,1.341,301,1.341,302,1.341,303,1.341,304,1.341,305,1.341,306,1.341,307,1.341,308,1.341,309,1.341,310,1.341,311,1.341,312,1.341,313,1.341,314,1.341,315,2.21,316,1.814,317,2.21,318,1.341,319,2.21,320,1.341,321,1.341,322,1.341,323,1.341,324,1.341,325,2.819,326,1.341,327,1.341,328,1.341,329,1.341,330,1.341,331,1.341,332,1.341,333,1.341,334,1.101,335,1.341,336,1.341,337,1.341,338,1.341,339,1.341]],["title/modules/ProductsModule.html",[0,1.45,8,1.625]],["body/modules/ProductsModule.html",[0,2.045,2,1.539,3,2.045,6,2.621,7,0.041,8,3.044,9,2.588,10,1.947,11,1.947,12,0.505,13,0.439,14,0.439,16,2.959,17,0.978,18,0.905,20,2.226,21,1.38,24,2.599,44,0.505,45,0.16,46,0.029,47,0.029,50,2.292,111,3.455,226,2.907,275,2.621,276,2.599,340,2.599,341,3.166,342,2.599,343,3.166,344,3.166,345,1.724,346,2.599,347,3.166]],["title/classes/ProductsRepository.html",[45,0.151,345,1.625]],["body/classes/ProductsRepository.html",[7,0.041,12,0.244,13,0.212,14,0.212,17,0.702,18,0.437,22,1.367,26,0.904,44,0.244,45,0.078,46,0.017,47,0.017,54,0.212,55,1.072,62,0.994,64,1.688,65,1.688,66,1.518,67,1.688,68,2.087,81,1.54,84,0.743,88,1.483,134,2.832,149,2.198,151,2.544,159,1.68,160,1.718,165,2.268,168,1.68,169,1.513,170,1.729,171,1.729,200,1.729,208,2.253,212,2.019,225,0.833,228,0.833,229,1.729,230,1.729,232,1.729,233,1.729,236,2.169,237,1.729,239,1.729,248,1.729,251,1.729,252,1.718,254,1.729,263,1.075,264,2.485,267,2.019,271,1.256,277,1.075,278,1.075,279,1.075,280,1.075,281,1.075,334,1.256,345,1.34,348,1.256,349,2.169,350,1.53,351,1.53,352,1.53,353,1.53,354,1.53,355,1.53,356,1.256,357,1.53,358,1.53,359,3.712,360,1.53,361,1.53,362,1.53,363,1.53,364,1.53,365,1.53,366,1.53,367,3.085,368,1.53,369,2.46,370,2.46,371,1.53,372,2.46,373,1.53,374,1.53,375,1.53,376,1.53,377,1.53,378,1.53,379,1.53,380,1.53,381,1.53,382,1.53,383,1.256,384,2.46,385,1.53,386,1.53,387,1.53,388,1.53,389,1.53,390,1.53,391,2.46,392,1.53,393,1.53,394,1.53,395,1.53,396,1.53,397,1.53,398,1.53,399,1.53,400,1.256,401,1.53]],["title/injectables/ProductsService.html",[131,1.3,275,1.45]],["body/injectables/ProductsService.html",[7,0.041,12,0.345,13,0.3,14,0.3,17,0.864,18,0.619,21,0.943,22,0.764,26,0.864,44,0.345,45,0.11,46,0.022,47,0.022,54,0.3,55,1.403,62,1.224,64,2.077,65,2.077,66,1.868,67,1.982,68,2.298,81,1.982,88,1.647,131,1.403,132,1.331,135,2.262,142,1.521,147,1.521,165,2.464,208,2.317,228,1.178,229,2.262,230,2.262,232,2.262,233,2.262,236,2.701,237,2.262,239,2.262,248,2.262,251,2.262,252,2.068,254,1.521,263,1.521,264,2.991,275,1.564,277,1.521,278,1.521,279,1.521,280,1.521,281,1.521,345,2.595,346,1.776,402,1.776,403,2.164,404,2.164,405,2.164,406,2.164,407,2.164,408,2.164,409,2.164,410,2.164,411,2.164,412,2.164,413,2.164,414,2.164,415,2.164]],["title/entities/User.html",[150,1.3,206,1.625]],["body/entities/User.html",[7,0.04,12,0.533,13,0.464,14,0.464,17,0.606,26,0.881,34,2.117,36,2.645,40,2.056,42,3.067,44,0.533,45,0.169,46,0.03,47,0.03,54,0.464,60,2.117,62,1.247,87,1.71,88,1.74,150,1.901,206,2.376,208,2.645,214,3.582,222,4.226,224,2.745,225,1.821,416,2.745,417,3.344,418,3.344,419,3.344,420,3.344,421,3.344]],["title/classes/UsersRepository.html",[45,0.151,114,1.45]],["body/classes/UsersRepository.html",[7,0.041,12,0.423,13,0.368,14,0.368,17,0.894,18,0.759,26,0.481,34,1.88,36,2.032,44,0.423,45,0.135,46,0.025,47,0.025,54,0.368,55,1.626,59,2.274,62,0.682,64,1.157,65,1.157,66,1.04,67,1.157,68,1.626,74,1.866,75,1.866,84,1.29,114,1.813,134,2.349,143,2.623,149,2.274,150,1.626,151,2.653,159,2.032,160,1.813,199,2.179,200,2.623,225,1.446,349,3.033,356,2.179,383,2.179,422,2.179,423,3.731,424,3.731,425,2.655,426,3.731,427,2.655,428,3.731,429,2.655,430,2.655,431,3.731,432,2.655,433,3.731,434,2.655,435,2.655,436,2.655,437,2.655,438,2.655,439,2.655,440,2.655,441,2.655,442,2.655,443,2.655,444,2.655]],["title/coverage.html",[445,2.843]],["body/coverage.html",[7,0.04,14,0.396,22,1.006,26,0.517,45,0.256,46,0.027,47,0.027,48,2.135,49,1.753,51,2.34,59,1.385,76,1.385,85,2.34,86,2.34,109,1.552,114,1.385,131,1.953,133,2.34,144,1.552,150,1.242,160,1.385,165,1.385,166,2.34,167,2.34,186,1.753,188,2.34,189,2.34,190,2.34,206,2.135,207,2.34,226,1.753,227,2.34,228,1.552,252,1.385,275,1.385,345,1.552,348,2.34,400,4.77,402,2.34,416,2.34,422,2.34,445,2.004,446,2.851,447,2.851,448,2.851,449,4.826,450,2.851,451,2.34,452,2.34,453,2.851,454,2.34,455,4.826,456,3.92,457,2.34,458,2.851,459,2.34,460,3.92,461,2.34,462,2.34,463,2.851,464,2.851,465,2.851,466,2.851]],["title/dependencies.html",[3,1.74,467,2.056]],["body/dependencies.html",[3,1.571,7,0.041,18,0.924,21,1.409,27,2.653,45,0.216,46,0.029,47,0.029,101,1.987,117,1.987,119,2.272,123,2.624,143,2.272,198,3.503,225,1.76,282,3.503,284,2.653,286,2.653,468,4.776,469,3.232,470,3.232,471,3.232,472,3.232,473,3.232,474,3.232,475,3.232,476,3.232,477,3.232,478,3.232,479,3.232,480,3.232,481,3.232,482,3.232,483,3.232,484,3.232,485,3.232,486,3.232,487,3.232,488,3.232,489,3.232,490,3.232,491,3.232,492,3.232,493,3.232,494,3.232,495,3.232,496,3.232,497,3.232]],["title/miscellaneous/enumerations.html",[498,1.217,499,2.939]],["body/miscellaneous/enumerations.html",[7,0.039,46,0.034,47,0.034,54,0.573,179,2.713,498,2.007,499,3.391,500,4.131,501,4.982,502,4.131,503,4.131,504,4.392,505,4.131,506,4.131,507,4.131,508,4.131,509,4.131]],["title/miscellaneous/functions.html",[498,1.217,510,2.939]],["body/miscellaneous/functions.html",[7,0.035,46,0.035,47,0.035,54,0.616,457,3.644,459,4.528,498,2.157,510,3.644,511,4.439]],["title/classes/getProductsFilterDto.html",[45,0.151,252,1.45]],["body/classes/getProductsFilterDto.html",[7,0.04,12,0.535,13,0.466,14,0.466,17,0.793,22,1.185,26,0.97,44,0.535,45,0.222,46,0.03,47,0.03,54,0.466,60,1.907,62,1.123,66,2.021,84,1.632,87,1.715,88,1.391,101,2.065,179,2.65,182,2.065,183,2.757,185,2.757,228,2.65,252,2.126,359,3.995,461,3.995,462,2.757,512,5.156,513,3.359,514,3.359,515,3.359]],["title/index.html",[54,0.348,516,2.505,517,2.505]],["body/index.html",[7,0.04,13,0.416,46,0.028,47,0.028,168,1.63,349,2.105,445,2.105,518,2.994,519,2.994,520,4.054,521,2.994,522,2.994,523,2.994,524,2.994,525,2.994,526,2.994,527,4.596,528,2.994,529,2.994,530,2.994,531,5.426,532,2.994,533,2.994,534,2.994,535,5.306,536,2.994,537,2.994,538,4.054,539,2.994,540,2.994,541,2.994,542,2.994,543,4.054,544,4.054,545,2.994,546,2.994,547,2.994,548,4.054,549,4.054,550,2.994,551,2.994,552,2.994,553,2.994,554,2.994,555,2.458,556,2.994,557,2.994,558,2.994,559,2.994,560,2.994,561,2.994,562,2.994,563,2.994,564,2.994,565,2.994,566,2.458,567,2.994,568,2.994,569,2.994,570,2.994,571,2.994,572,2.994,573,2.458]],["title/modules.html",[2,1.965]],["body/modules.html",[1,2.61,2,2.063,6,2.063,7,0.034,8,2.311,46,0.034,47,0.034,555,4.443,574,5.412,575,5.412,576,5.412]],["title/overview.html",[577,3.32]],["body/overview.html",[1,3.355,2,1.604,3,2.103,4,2.71,5,2.71,6,2.772,7,0.039,8,3.028,9,2.66,10,2.03,11,2.03,40,2.03,46,0.029,47,0.029,50,1.798,76,2.345,84,1.604,106,2.71,107,2.71,108,2.71,109,3.028,132,2.03,186,2.03,275,2.345,340,2.71,342,2.71,577,2.71,578,4.327,579,4.327,580,3.301,581,3.301]],["title/properties.html",[87,1.403,467,2.056]],["body/properties.html",[7,0.04,46,0.035,47,0.035,87,1.71,168,2.376,566,3.583,573,3.583,582,4.364,583,4.364,584,4.364]],["title/miscellaneous/variables.html",[498,1.217,585,2.939]],["body/miscellaneous/variables.html",[7,0.04,46,0.033,47,0.033,54,0.555,81,1.744,149,1.945,150,1.744,316,3.286,451,3.286,452,4.012,454,4.012,498,1.945,504,3.286,585,3.286,586,4.002,587,4.002,588,4.002,589,4.002,590,4.002,591,4.002,592,4.002,593,4.002]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":400,"title":{},"body":{"classes/ProductsRepository.html":{},"coverage.html":{}}}],["0.0.1",{"_index":583,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["05.cleardb.net",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["1",{"_index":581,"title":{},"body":{"overview.html":{}}}],["1.4.4",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["128",{"_index":218,"title":{},"body":{"entities/Product.html":{}}}],["1afe2ef4",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["2",{"_index":579,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["256",{"_index":216,"title":{},"body":{"entities/Product.html":{}}}],["3",{"_index":578,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":580,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["512",{"_index":212,"title":{},"body":{"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["7.2.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":323,"title":{},"body":{"controllers/ProductsController.html":{}}}],["accesstoken",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":443,"title":{},"body":{"classes/UsersRepository.html":{}}}],["amazing",{"_index":556,"title":{},"body":{"index.html":{}}}],["app",{"_index":533,"title":{},"body":{"index.html":{}}}],["appelle",{"_index":296,"title":{},"body":{"controllers/ProductsController.html":{}}}],["applications",{"_index":526,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["auth",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{}}}],["authcontroller",{"_index":49,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":59,"title":{"classes/AuthCredentialsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["authcreditentialsdto",{"_index":426,"title":{},"body":{"classes/UsersRepository.html":{}}}],["authguard",{"_index":287,"title":{},"body":{"controllers/ProductsController.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":566,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":76,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["avec",{"_index":370,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["await",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["b4649a9f2354a5",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":557,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":267,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["badrequestexception(\"le",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{}}}],["bcrypt",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":432,"title":{},"body":{"classes/UsersRepository.html":{}}}],["bcrypt.hash(password",{"_index":434,"title":{},"body":{"classes/UsersRepository.html":{}}}],["body",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["bootstrap",{"_index":459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brackets",{"_index":355,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["brackets((qb",{"_index":363,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["browse",{"_index":576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":574,"title":{},"body":{"modules.html":{}}}],["building",{"_index":521,"title":{},"body":{"index.html":{}}}],["caractères",{"_index":382,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["catch",{"_index":437,"title":{},"body":{"classes/UsersRepository.html":{}}}],["cb",{"_index":317,"title":{},"body":{"controllers/ProductsController.html":{}}}],["cb(null",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{}}}],["cdbr",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":45,"title":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"classes/getProductsFilterDto.html":{}}}],["classes",{"_index":84,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":340,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":341,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":342,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["column",{"_index":222,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["column('int",{"_index":220,"title":{},"body":{"entities/Product.html":{}}}],["column({type",{"_index":209,"title":{},"body":{"entities/Product.html":{}}}],["column({unique",{"_index":419,"title":{},"body":{"entities/User.html":{}}}],["computer",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["conflictexception",{"_index":427,"title":{},"body":{"classes/UsersRepository.html":{}}}],["conflictexception('username",{"_index":442,"title":{},"body":{"classes/UsersRepository.html":{}}}],["const",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productsrepository",{"_index":403,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(usersrepository",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":48,"title":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('products",{"_index":288,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controllers",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["coverage",{"_index":445,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createparamdecorator",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":229,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":306,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(createproductdto",{"_index":237,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":165,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createuser",{"_index":423,"title":{},"body":{"classes/UsersRepository.html":{}}}],["createuser(authcreditentialsdto",{"_index":424,"title":{},"body":{"classes/UsersRepository.html":{}}}],["credentials",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials.dto",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{}}}],["credentials.dto.ts",{"_index":86,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:15",{"_index":94,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:7",{"_index":96,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["data",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":324,"title":{},"body":{"controllers/ProductsController.html":{}}}],["decorators",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{}}}],["default",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["delete",{"_index":268,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:id",{"_index":240,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":230,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('id",{"_index":310,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":168,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{},"index.html":{},"properties.html":{}}}],["description.length",{"_index":373,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["destination",{"_index":314,"title":{},"body":{"controllers/ProductsController.html":{}}}],["development",{"_index":534,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":285,"title":{},"body":{"controllers/ProductsController.html":{}}}],["documentation",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["doublon",{"_index":441,"title":{},"body":{"classes/UsersRepository.html":{}}}],["dto/auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{}}}],["dto/create",{"_index":277,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["dto/get",{"_index":279,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["e2e",{"_index":545,"title":{},"body":{"index.html":{}}}],["east",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["editproductdto",{"_index":264,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["efficient",{"_index":522,"title":{},"body":{"index.html":{}}}],["entities",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"entities/Product.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":206,"title":{"entities/Product.html":{},"entities/User.html":{}},"body":{"entities/Product.html":{},"entities/User.html":{},"coverage.html":{}}}],["entityrepository",{"_index":356,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["entityrepository(product",{"_index":358,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["entityrepository(user",{"_index":429,"title":{},"body":{"classes/UsersRepository.html":{}}}],["enumerations",{"_index":499,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["er_dup_entry",{"_index":440,"title":{},"body":{"classes/UsersRepository.html":{}}}],["error",{"_index":438,"title":{},"body":{"classes/UsersRepository.html":{}}}],["error.code",{"_index":439,"title":{},"body":{"classes/UsersRepository.html":{}}}],["est",{"_index":376,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["excéder",{"_index":381,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["executioncontext",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":444,"title":{},"body":{"classes/UsersRepository.html":{}}}],["expiresin",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["exports",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":282,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":258,"title":{},"body":{"controllers/ProductsController.html":{}}}],["extends",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["extractjwt",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fichier",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["file.originalname",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|svg",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.split('.')[0",{"_index":318,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.split('.')[1",{"_index":320,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileext",{"_index":319,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filefilter",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileinterceptor",{"_index":283,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileinterceptor('file",{"_index":312,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":247,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename.split('.').join('_",{"_index":322,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filepath",{"_index":262,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filter.dto",{"_index":280,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["filter.dto.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["filter.dto.ts:10",{"_index":513,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":515,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["filterdto",{"_index":254,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["filtre",{"_index":295,"title":{},"body":{"controllers/ProductsController.html":{}}}],["found",{"_index":367,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["framework",{"_index":520,"title":{},"body":{"index.html":{}}}],["function",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":510,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":249,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('img/:filename",{"_index":245,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('types",{"_index":255,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getimage",{"_index":231,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getimage(filename",{"_index":242,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid",{"_index":232,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproductbyid(@param('id",{"_index":304,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":248,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproducts",{"_index":233,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproducts(@query",{"_index":291,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproducts(filterdto",{"_index":251,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproductsfilterdto",{"_index":252,"title":{"classes/getProductsFilterDto.html":{}},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["getproducttypes",{"_index":234,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getting",{"_index":516,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":552,"title":{},"body":{"index.html":{}}}],["hash",{"_index":430,"title":{},"body":{"classes/UsersRepository.html":{}}}],["hashedpassword",{"_index":433,"title":{},"body":{"classes/UsersRepository.html":{}}}],["here",{"_index":563,"title":{},"body":{"index.html":{}}}],["heroku_457d49432c8e5d5",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["host",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:3000/img/${file.filename",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{}}}],["https://nestjs.com",{"_index":570,"title":{},"body":{"index.html":{}}}],["id",{"_index":208,"title":{},"body":{"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{}}}],["identifier",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":169,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["image')@useinterceptors(undefined",{"_index":260,"title":{},"body":{"controllers/ProductsController.html":{}}}],["img",{"_index":315,"title":{},"body":{"controllers/ProductsController.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["injectrepository(productsrepository",{"_index":410,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(usersrepository",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["installation",{"_index":530,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":532,"title":{},"body":{"index.html":{}}}],["interface",{"_index":186,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["internalservererrorexception",{"_index":428,"title":{},"body":{"classes/UsersRepository.html":{}}}],["introuvable",{"_index":372,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["isenum",{"_index":183,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/getProductsFilterDto.html":{}}}],["isenum(producttype",{"_index":185,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/getProductsFilterDto.html":{}}}],["isnotempty",{"_index":172,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnotempty()@isenum(producttype",{"_index":180,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnotempty()@isnumberstring",{"_index":177,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumberstring",{"_index":184,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":512,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["isoptional()@isenum(producttype",{"_index":514,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["isstring",{"_index":97,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["isstring()@minlength(8)@maxlength(20",{"_index":95,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["isstring()@minlength(8)@maxlength(32)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":89,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["join",{"_index":559,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":144,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":109,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":567,"title":{},"body":{"index.html":{}}}],["l'id",{"_index":401,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["l\\'id",{"_index":371,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["la",{"_index":374,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["length",{"_index":211,"title":{},"body":{"entities/Product.html":{}}}],["les",{"_index":301,"title":{},"body":{"controllers/ProductsController.html":{}}}],["libelle",{"_index":170,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["license",{"_index":573,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":549,"title":{},"body":{"index.html":{}}}],["login",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["longue",{"_index":378,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["matches",{"_index":98,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":105,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":99,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["maxlength(20",{"_index":103,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["maxlength(32",{"_index":104,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["message",{"_index":92,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["metadata",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["minlength",{"_index":100,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["minlength(8",{"_index":102,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["miscellaneous",{"_index":498,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":548,"title":{},"body":{"index.html":{}}}],["mode",{"_index":538,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":562,"title":{},"body":{"index.html":{}}}],["multer",{"_index":286,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["mysql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":568,"title":{},"body":{"index.html":{}}}],["n'est",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["name",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["ne",{"_index":380,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["nest",{"_index":527,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":572,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":284,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["new",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["newfilename",{"_index":321,"title":{},"body":{"controllers/ProductsController.html":{}}}],["newproduct",{"_index":386,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.description",{"_index":390,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.image",{"_index":391,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.libelle",{"_index":388,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.quantite",{"_index":396,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.type",{"_index":394,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["node.js",{"_index":519,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":357,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["notfoundexception(`produit",{"_index":369,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["npm",{"_index":531,"title":{},"body":{"index.html":{}}}],["number",{"_index":176,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["object.values(producttype",{"_index":290,"title":{},"body":{"controllers/ProductsController.html":{}}}],["open",{"_index":550,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["ordinateur",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orwhere('product.description",{"_index":365,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":577,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":467,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":269,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('filename",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('id",{"_index":308,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["pas",{"_index":334,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["passport",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{}}}],["patch",{"_index":270,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:id",{"_index":265,"title":{},"body":{"controllers/ProductsController.html":{}}}],["path",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":189,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["phone",{"_index":506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":560,"title":{},"body":{"index.html":{}}}],["port",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["post('/signin",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":259,"title":{},"body":{"controllers/ProductsController.html":{}}}],["prefix",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["primarygeneratedcolumn",{"_index":224,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":214,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["private",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":22,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["product.description",{"_index":389,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.dto",{"_index":278,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["product.dto.ts",{"_index":167,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":174,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:15",{"_index":181,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:19",{"_index":178,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:6",{"_index":175,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:9",{"_index":173,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":281,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["product.image",{"_index":392,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.libelle",{"_index":387,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.quantite",{"_index":395,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.type",{"_index":393,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["production",{"_index":540,"title":{},"body":{"index.html":{}}}],["products",{"_index":228,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["products.controller",{"_index":344,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.repository",{"_index":346,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":276,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/product.entity",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["products/products.module",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":226,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":8,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepository",{"_index":345,"title":{"classes/ProductsRepository.html":{}},"body":{"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsservice",{"_index":275,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productsservice.getproductswithfilters",{"_index":297,"title":{},"body":{"controllers/ProductsController.html":{}}}],["producttype",{"_index":179,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"miscellaneous/enumerations.html":{},"classes/getProductsFilterDto.html":{}}}],["produits",{"_index":302,"title":{},"body":{"controllers/ProductsController.html":{}}}],["progressive",{"_index":518,"title":{},"body":{"index.html":{}}}],["project",{"_index":551,"title":{},"body":{"index.html":{}}}],["promise",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["properties",{"_index":87,"title":{"properties.html":{}},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"entities/Product.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{},"properties.html":{}}}],["proposée",{"_index":375,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["providers",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["qb.where('product.libelle",{"_index":364,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["quantite",{"_index":171,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["query",{"_index":271,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["query.andwhere",{"_index":362,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["query.andwhere('product.type",{"_index":361,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["query.getmany",{"_index":366,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["read",{"_index":561,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":349,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"index.html":{}}}],["req",{"_index":316,"title":{},"body":{"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["res.sendfile(filename",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["response",{"_index":244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["result",{"_index":397,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["result.affected",{"_index":399,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":299,"title":{},"body":{"controllers/ProductsController.html":{}}}],["return",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["rimraf",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{}}}],["run",{"_index":535,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["s'il",{"_index":292,"title":{},"body":{"controllers/ProductsController.html":{}}}],["salt",{"_index":431,"title":{},"body":{"classes/UsersRepository.html":{}}}],["scalable",{"_index":523,"title":{},"body":{"index.html":{}}}],["search",{"_index":359,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["secret",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sendimage",{"_index":235,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sendimage(@uploadedfile",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sendimage(file",{"_index":257,"title":{},"body":{"controllers/ProductsController.html":{}}}],["server",{"_index":524,"title":{},"body":{"index.html":{}}}],["side",{"_index":525,"title":{},"body":{"index.html":{}}}],["signin",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(authcredentialsdto",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signoptions",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(authcredentialsdto",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["sinon",{"_index":298,"title":{},"body":{"controllers/ProductsController.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{},"index.html":{}}}],["sponsors",{"_index":554,"title":{},"body":{"index.html":{}}}],["src/.../get",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":85,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["src/auth/get",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":188,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:21",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/user.entity.ts",{"_index":416,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/auth/user.entity.ts:12",{"_index":418,"title":{},"body":{"entities/User.html":{}}}],["src/auth/user.entity.ts:6",{"_index":417,"title":{},"body":{"entities/User.html":{}}}],["src/auth/user.entity.ts:9",{"_index":420,"title":{},"body":{"entities/User.html":{}}}],["src/auth/users.repository.ts",{"_index":422,"title":{},"body":{"classes/UsersRepository.html":{},"coverage.html":{}}}],["src/auth/users.repository.ts:12",{"_index":425,"title":{},"body":{"classes/UsersRepository.html":{}}}],["src/main.ts",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/dto/create",{"_index":166,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dto/get",{"_index":461,"title":{},"body":{"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["src/products/product",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/products/product.entity.ts",{"_index":207,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:10",{"_index":219,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:13",{"_index":213,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:16",{"_index":217,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:19",{"_index":223,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:22",{"_index":221,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:7",{"_index":215,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":227,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:32",{"_index":256,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:37",{"_index":253,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:44",{"_index":250,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:49",{"_index":238,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:54",{"_index":266,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:62",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:87",{"_index":261,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:98",{"_index":246,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":343,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.repository.ts",{"_index":348,"title":{},"body":{"classes/ProductsRepository.html":{},"coverage.html":{}}}],["src/products/products.repository.ts:32",{"_index":352,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:42",{"_index":350,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:63",{"_index":354,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:80",{"_index":351,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:9",{"_index":353,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.service.ts",{"_index":402,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:15",{"_index":408,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:19",{"_index":407,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:23",{"_index":405,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:27",{"_index":409,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:34",{"_index":406,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:9",{"_index":404,"title":{},"body":{"injectables/ProductsService.html":{}}}],["start",{"_index":536,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":539,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":541,"title":{},"body":{"index.html":{}}}],["started",{"_index":517,"title":{"index.html":{}},"body":{}}],["starter",{"_index":529,"title":{},"body":{"index.html":{}}}],["statements",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":564,"title":{},"body":{"index.html":{}}}],["storage",{"_index":313,"title":{},"body":{"controllers/ProductsController.html":{}}}],["strategy",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":88,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{}}}],["success",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":555,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":575,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tablette",{"_index":509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":544,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":547,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":546,"title":{},"body":{"index.html":{}}}],["tests",{"_index":543,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":553,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(authcredentialsdto",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(authcredentialsdto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.create",{"_index":383,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["this.createquerybuilder('product').where('1",{"_index":360,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.delete(id",{"_index":398,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.findone(id",{"_index":368,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.getproductbyid(id",{"_index":385,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.productsrepository.createproduct(createproductdto",{"_index":413,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.deleteproduct(id",{"_index":415,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.getproductbyid(id",{"_index":412,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.getproducts(filterdto",{"_index":411,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.updateproduct(id",{"_index":414,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":307,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":311,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproductbyid(id",{"_index":305,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproducts(filterdto",{"_index":303,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(id",{"_index":309,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.save(product",{"_index":384,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.save(user",{"_index":436,"title":{},"body":{"classes/UsersRepository.html":{}}}],["this.usersrepository.createuser(authcredentialsdto",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersrepository.findone",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["throw",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["top",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":565,"title":{},"body":{"index.html":{}}}],["tous",{"_index":300,"title":{},"body":{"controllers/ProductsController.html":{}}}],["transformer",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["trop",{"_index":377,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["true",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductsController.html":{},"entities/User.html":{}}}],["try",{"_index":435,"title":{},"body":{"classes/UsersRepository.html":{}}}],["tslib",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":571,"title":{},"body":{"index.html":{}}}],["type",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["type.enum",{"_index":182,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/getProductsFilterDto.html":{}}}],["type.enum.ts",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":225,"title":{},"body":{"entities/Product.html":{},"classes/ProductsRepository.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productsrepository",{"_index":347,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([usersrepository",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["types/passport",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":528,"title":{},"body":{"index.html":{}}}],["téléphone",{"_index":507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["un",{"_index":294,"title":{},"body":{"controllers/ProductsController.html":{}}}],["unauthorizedexception",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('please",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{}}}],["unique",{"_index":421,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":542,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":584,"title":{},"body":{"properties.html":{}}}],["updateproduct",{"_index":236,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(id",{"_index":263,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["uploadedfile",{"_index":272,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards",{"_index":273,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(authguard",{"_index":289,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useinterceptors",{"_index":274,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":150,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UsersRepository.html":{}}}],["user.password",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"classes/UsersRepository.html":{}}}],["users.repository",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersrepository",{"_index":114,"title":{"classes/UsersRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["uuid",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":101,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"dependencies.html":{},"classes/getProductsFilterDto.html":{}}}],["value",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":210,"title":{},"body":{"entities/Product.html":{}}}],["variable",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":585,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":582,"title":{},"body":{"properties.html":{}}}],["veuillez",{"_index":379,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["watch",{"_index":537,"title":{},"body":{"index.html":{}}}],["weak",{"_index":93,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["website",{"_index":569,"title":{},"body":{"index.html":{}}}],["y",{"_index":293,"title":{},"body":{"controllers/ProductsController.html":{}}}],["you'd",{"_index":558,"title":{},"body":{"index.html":{}}}],["z",{"_index":91,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["z])(?=.*[a",{"_index":90,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsModule } from './products/products.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './products/product.entity';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'us-cdbr-east-05.cleardb.net',\n      port: 3306,\n      username: 'b4649a9f2354a5',\n      password: '1afe2ef4',\n      database: 'heroku_457d49432c8e5d5',\n      entities: [Product],\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    AuthModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signIn\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('/signup')\n  signUp(@Body() authCredentialsDto: AuthCredentialsDto): Promise {\n    return this.authService.signUp(authCredentialsDto);\n  }\n\n  @Post('/signin')\n  signIn(\n    @Body() authCredentialsDto: AuthCredentialsDto,\n  ): Promise {\n    return this.authService.signIn(authCredentialsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDto.html":{"url":"classes/AuthCredentialsDto.html","title":"class - AuthCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(32)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-credentials.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-credentials.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Matches, MaxLength, MinLength } from 'class-validator';\n\nexport class AuthCredentialsDto {\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  username: string;\n\n  @IsString()\n  @MinLength(8)\n  @MaxLength(32)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersRepository } from './users.repository';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: 'top-secret',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    TypeOrmModule.forFeature([UsersRepository]),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersRepository } from './users.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UsersRepository)\n    private usersRepository: UsersRepository,\n    private jwtService: JwtService,\n  ) {}\n\n  async signUp(authCredentialsDto: AuthCredentialsDto): Promise {\n    return this.usersRepository.createUser(authCredentialsDto);\n  }\n\n  async signIn(\n    authCredentialsDto: AuthCredentialsDto,\n  ): Promise {\n    const { username, password } = authCredentialsDto;\n    const user = await this.usersRepository.findOne({ username });\n\n    if (user && (await bcrypt.compare(password, user.password))) {\n      // return 'success';\n      const payload: JwtPayload = { username };\n      const accessToken: string = this.jwtService.sign(payload);\n      return { accessToken };\n    } else {\n      throw new UnauthorizedException('Please check your login credentials');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                libelle\n                            \n                            \n                                quantite\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ProductType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductType } from '../product-type.enum';\nimport { IsEnum, IsNotEmpty, IsNumberString } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsNotEmpty()\n  libelle: string;\n\n  @IsNotEmpty()\n  description: string;\n\n  image: string;\n\n  @IsNotEmpty()\n  @IsEnum(ProductType)\n  type: ProductType;\n\n  @IsNotEmpty()\n  @IsNumberString()\n  quantite: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersRepository } from './users.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JwtPayload } from './jwt-payload.interface';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UsersRepository)\n    private usersRepository: UsersRepository,\n  ) {\n    super({\n      secretOrKey: 'top-secret',\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const { username } = payload;\n    const user: User = await this.usersRepository.findOne({ username });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                libelle\n                            \n                            \n                                quantite\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 512})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 256})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ProductType } from './product-type.enum';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'varchar', length: 128 })\n  libelle: string;\n\n  @Column({ type: 'varchar', length: 512 })\n  description: string;\n\n  @Column({ type: 'varchar', length: 256 })\n  image: string;\n\n  @Column()\n  type: ProductType;\n\n  @Column('int')\n  quantite: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                    Async\n                                getImage\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                getProductTypes\n                            \n                            \n                                sendImage\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(filename, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('img/:filename')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(filterDto: getProductsFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductTypes\n                        \n                    \n                \n            \n            \n                \ngetProductTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('types')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendImage\n                        \n                    \n                \n            \n            \n                \nsendImage(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-image')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { filepath: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\nimport { Product } from './product.entity';\nimport { ProductType } from './product-type.enum';\nimport { Express, Response } from 'express';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('products')\n@UseGuards(AuthGuard())\nexport class ProductsController {\n  constructor(private productsService: ProductsService) {}\n\n  @Get('types')\n  getProductTypes(): string[] {\n    return Object.values(ProductType);\n  }\n\n  @Get()\n  getProducts(@Query() filterDto: getProductsFilterDto): Promise {\n    // s'il y a un filtre, appelle productsService.getProductsWithFilters\n    // sinon, retourne tous les produits\n    return this.productsService.getProducts(filterDto);\n  }\n\n  @Get('/:id')\n  getProductById(@Param('id') id: string): Promise {\n    return this.productsService.getProductById(id);\n  }\n\n  @Post()\n  createProduct(@Body() createProductDto: CreateProductDto): Promise {\n    return this.productsService.createProduct(createProductDto);\n  }\n\n  @Patch('/:id')\n  updateProduct(\n    @Param('id') id: string,\n    @Body() editProductDto: CreateProductDto,\n  ): Promise {\n    return this.productsService.updateProduct(id, editProductDto);\n  }\n\n  @Delete('/:id')\n  deleteProduct(@Param('id') id: string): Promise {\n    return this.productsService.deleteProduct(id);\n  }\n\n  @Post('upload-image')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: './img',\n        filename: (req, file, cb) => {\n          /*const filename = file.originalname.split('.')[0];\n          const fileExt = file.originalname.split('.')[1];\n          const newFileName =\n            filename.split('.').join('_') + '_' + Date.now() + '.' + fileExt;\n          */\n          cb(null, file.originalname);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (!file.originalname.match(/\\.(jpg|jpeg|png|svg)$/))\n          return cb(null, false);\n        return cb(null, true);\n      },\n    }),\n  )\n  sendImage(@UploadedFile() file: Express.Multer.File) {\n    if (!file) {\n      throw new BadRequestException(\"Le fichier n'est pas une image\");\n    } else {\n      return {\n        filepath: `http://localhost:3000/img/${file.filename}`,\n      };\n    }\n  }\n\n  @Get('img/:filename')\n  async getImage(\n    @Param('filename') filename,\n    @Res() res: Response,\n  ): Promise {\n    res.sendFile(filename, { root: './img' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nAuthModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsRepository } from './products.repository';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductsRepository]), AuthModule],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsRepository.html":{"url":"classes/ProductsRepository.html","title":"class - ProductsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts(filterDto: getProductsFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Brackets, EntityRepository, Repository } from 'typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\n\n@EntityRepository(Product)\nexport class ProductsRepository extends Repository {\n  async getProducts(filterDto: getProductsFilterDto): Promise {\n    const { type, search } = filterDto;\n    const query = this.createQueryBuilder('product').where('1');\n\n    if (type) {\n      query.andWhere('product.type = :type', { type: type });\n    }\n\n    if (search) {\n      query.andWhere(\n        new Brackets((qb) => {\n          qb.where('product.libelle LIKE :search', {\n            search: `%${search}%`,\n          }).orWhere('product.description LIKE :search', {\n            search: `%${search}%`,\n          });\n        }),\n      );\n    }\n\n    return await query.getMany();\n  }\n\n  async getProductById(id: string): Promise {\n    const found = await this.findOne(id);\n\n    if (!found) {\n      throw new NotFoundException(`Produit avec l\\'ID '${id}' introuvable`);\n    } else {\n      return found;\n    }\n  }\n\n  async createProduct(createProductDto: CreateProductDto): Promise {\n    const { libelle, description, image, type, quantite } = createProductDto;\n\n    if (description.length > 512) {\n      throw new BadRequestException(\n        `La description proposée est trop longue. Veuillez ne pas excéder 512 caractères`,\n      );\n    } else {\n      const product = this.create({\n        libelle,\n        description,\n        image,\n        type,\n        quantite,\n      });\n\n      await this.save(product);\n      return product;\n    }\n  }\n\n  async updateProduct(\n    id: string,\n    editProductDto: CreateProductDto,\n  ): Promise {\n    const product = await this.getProductById(id);\n    const newProduct = editProductDto;\n    product.libelle = newProduct.libelle;\n    product.description = newProduct.description;\n    if (newProduct.image !== '') {\n      product.image = newProduct.image;\n    }\n    product.type = newProduct.type;\n    product.quantite = newProduct.quantite;\n    await this.save(product);\n    return product;\n  }\n\n  async deleteProduct(id: string): Promise {\n    const result = await this.delete(id);\n\n    if (result.affected === 0) {\n      throw new NotFoundException(`Produit avec l'ID '${id}' introuvable.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(filterDto: getProductsFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsRepository } from './products.repository';\nimport { Product } from './product.entity';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(ProductsRepository)\n    private productsRepository: ProductsRepository,\n  ) {}\n\n  getProducts(filterDto: getProductsFilterDto): Promise {\n    return this.productsRepository.getProducts(filterDto);\n  }\n\n  getProductById(id: string): Promise {\n    return this.productsRepository.getProductById(id);\n  }\n\n  createProduct(createProductDto: CreateProductDto): Promise {\n    return this.productsRepository.createProduct(createProductDto);\n  }\n\n  updateProduct(\n    id: string,\n    editProductDto: CreateProductDto,\n  ): Promise {\n    return this.productsRepository.updateProduct(id, editProductDto);\n  }\n\n  deleteProduct(id: string): Promise {\n    return this.productsRepository.deleteProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  username: string;\n\n  @Column()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersRepository.html":{"url":"classes/UsersRepository.html","title":"class - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(authCreditentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/users.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCreditentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@EntityRepository(User)\nexport class UsersRepository extends Repository {\n  async createUser(authCreditentialsDto: AuthCredentialsDto): Promise {\n    const { username, password } = authCreditentialsDto;\n\n    // Hash\n    const salt = await bcrypt.genSalt();\n    const hashedPassword = await bcrypt.hash(password, salt);\n\n    const user = this.create({ username, password: hashedPassword });\n\n    try {\n      await this.save(user);\n    } catch (error) {\n      if (error.code === 'ER_DUP_ENTRY') {\n        // Doublon username\n        throw new ConflictException('Username already exists');\n      } else {\n        throw new InternalServerErrorException();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-credentials.dto.ts\n            \n            class\n            AuthCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/users.repository.ts\n            \n            class\n            UsersRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dto/get-products-filter.dto.ts\n            \n            class\n            getProductsFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/products/products.repository.ts\n            \n            class\n            ProductsRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.4\n        \n            @types/passport-jwt : ^3.0.6\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            express : ^4.18.1\n        \n            multer : ^1.4.4\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.5.3\n        \n            passport-jwt : ^4.0.0\n        \n            path : ^0.12.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            tslib : ^2.4.0\n        \n            typeorm : ^0.2.32\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductType   (src/.../product-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/products/product-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductType\n                    \n                \n                        \n                            \n                                 COMPUTER\n                            \n                        \n                        \n                            \n                                Value : Ordinateur\n                            \n                        \n                        \n                            \n                                 PHONE\n                            \n                        \n                        \n                            \n                                Value : Téléphone\n                            \n                        \n                        \n                            \n                                 TABLET\n                            \n                        \n                        \n                            \n                                Value : Tablette\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/getProductsFilterDto.html":{"url":"classes/getProductsFilterDto.html","title":"class - getProductsFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  getProductsFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/get-products-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/get-products-filter.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/get-products-filter.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductType } from '../product-type.enum';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport class getProductsFilterDto {\n  @IsOptional()\n  @IsEnum(ProductType)\n  type?: ProductType;\n\n  @IsOptional()\n  search?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nAuthModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data, context: ExecutionContext): User => {\n    const req = context.switchToHttp().getRequest();\n    return req.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
