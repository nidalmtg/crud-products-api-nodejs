var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.45,1,1.834]],["body/modules/AppModule.html",[0,1.995,1,3.409,2,1.483,3,1.995,4,2.505,5,2.505,6,2.593,7,0.041,8,2.906,9,2.525,10,1.876,11,1.876,12,0.486,13,0.423,14,0.423,15,3.051,16,2.887,17,0.939,18,0.873,19,3.051,20,2.145,21,1.33,22,1.449,23,3.051,24,2.505,25,3.051,26,0.553,27,2.505,28,3.051,29,3.051,30,3.051,31,3.051,32,1.33,33,2.505,34,1.662,35,3.051,36,3.051,37,1.876,38,3.051,39,2.887,40,3.051,41,0.486,42,0.155,43,0.028,44,0.028]],["title/controllers/AuthController.html",[45,1.625,46,1.834]],["body/controllers/AuthController.html",[7,0.041,12,0.468,13,0.407,14,0.407,17,0.825,18,0.839,26,0.725,41,0.468,42,0.149,43,0.027,44,0.027,45,1.598,46,2.459,47,1.598,48,2.41,49,2.41,50,2.935,51,0.407,52,1.743,53,3.735,54,3.283,55,2.41,56,2.764,57,1.743,58,4,59,1.027,60,2.935,61,1.743,62,1.743,63,1.568,64,1.743,65,2.129,66,2.41,67,4,68,2.935,69,3.283,70,2.41,71,2.063,72,2.063,73,2.211,74,2.41,75,2.935,76,2.41,77,2.935,78,1.743,79,2.935,80,2.935]],["title/classes/AuthCredentialsDto.html",[42,0.151,56,1.45]],["body/classes/AuthCredentialsDto.html",[7,0.04,12,0.524,13,0.456,14,0.456,17,0.596,26,0.782,32,2.098,34,2.891,41,0.524,42,0.219,43,0.029,44,0.029,51,0.456,56,2.096,57,1.88,59,1.107,81,1.597,82,3.953,83,2.697,84,1.69,85,1.625,86,3.285,87,4.313,88,4.313,89,4.313,90,4.313,91,3.285,92,3.285,93,3.285,94,4.815,95,3.285,96,3.285,97,3.285,98,2.02,99,4.313,100,3.285,101,3.285,102,3.285]],["title/modules/AuthModule.html",[0,1.45,6,1.45]],["body/modules/AuthModule.html",[0,1.862,2,1.34,3,1.862,6,2.671,7,0.041,9,2.355,10,1.695,11,1.695,12,0.439,13,0.383,14,0.383,16,1.938,17,0.981,18,0.788,20,1.938,21,1.201,41,0.439,42,0.14,43,0.026,44,0.026,46,2.707,47,2.086,73,2.515,74,2.263,103,2.263,104,2.263,105,2.263,106,3.089,107,2.757,108,3.145,109,3.831,110,2.757,111,1.34,112,1.938,113,3.831,114,1.695,115,2.757,116,1.938,117,2.757,118,2.757,119,2.757,120,1.695,121,2.757,122,3.145,123,2.263,124,2.757,125,2.757,126,2.757,127,2.757]],["title/injectables/AuthService.html",[73,1.45,128,1.3]],["body/injectables/AuthService.html",[7,0.041,12,0.358,13,0.311,14,0.311,17,0.905,18,0.642,21,0.978,26,0.712,32,1.71,34,1.222,41,0.358,42,0.114,43,0.023,44,0.023,51,0.311,52,1.441,53,3.222,54,2.714,55,1.842,56,2.622,59,1.008,61,1.71,62,1.71,63,1.538,64,1.441,65,1.887,66,2.714,71,1.577,72,1.577,73,1.606,78,1.71,85,0.713,111,2.347,112,1.577,116,1.577,120,1.379,128,1.441,129,1.379,130,1.842,131,2.63,132,2.324,133,1.842,134,4.994,135,2.244,136,2.244,137,2.244,138,1.842,139,1.577,140,2.324,141,1.8,142,1.842,143,1.842,144,2.324,145,2.244,146,2.104,147,1.441,148,2.032,149,1.842,150,2.244,151,2.244,152,2.244,153,1.842,154,3.305,155,2.244,156,1.222,157,1.09,158,2.244,159,2.244,160,2.244,161,2.244]],["title/classes/CreateProductDto.html",[42,0.151,162,1.45]],["body/classes/CreateProductDto.html",[7,0.04,12,0.468,13,0.407,14,0.407,17,0.725,22,1.036,26,0.996,41,0.468,42,0.203,43,0.027,44,0.027,51,0.407,57,2.129,59,1.312,81,1.426,84,1.568,85,1.677,98,1.805,162,1.944,163,4.331,164,2.41,165,2.477,166,2.798,167,3.198,168,3.198,169,5.398,170,2.935,171,2.935,172,2.935,173,3.283,174,2.935,175,2.935,176,2.477,177,2.935,178,2.935,179,1.805,180,2.41,181,4,182,2.41]],["title/interfaces/JwtPayload.html",[141,1.625,183,1.834]],["body/interfaces/JwtPayload.html",[7,0.039,12,0.648,13,0.564,14,0.564,26,0.737,32,2.408,41,0.648,43,0.034,44,0.034,51,0.564,84,1.934,85,1.689,141,2.686,183,2.499,184,4.064,185,3.337,186,3.337]],["title/injectables/JwtStrategy.html",[106,1.625,128,1.3]],["body/injectables/JwtStrategy.html",[7,0.041,12,0.417,13,0.363,14,0.363,17,0.948,18,0.748,21,1.14,26,0.67,32,1.61,41,0.417,42,0.133,43,0.025,44,0.025,51,0.363,52,1.61,59,0.948,61,1.61,62,1.61,63,1.447,64,1.14,65,1.61,78,1.14,106,2.011,111,2.473,112,1.839,114,1.609,120,2.271,122,2.148,123,2.148,128,1.61,129,1.609,131,2.331,132,2.596,133,2.148,138,3.032,139,1.839,141,2.532,142,2.148,143,2.148,144,1.839,146,1.795,147,2.137,148,1.609,149,2.148,153,3.032,156,1.425,157,1.272,187,2.148,188,3.693,189,2.616,190,3.693,191,2.616,192,2.616,193,2.616,194,2.616,195,2.148,196,2.148,197,1.839,198,2.616,199,2.616,200,2.616,201,2.616,202,2.616]],["title/entities/Product.html",[22,1.053,203,1.625]],["body/entities/Product.html",[7,0.04,12,0.416,13,0.362,14,0.362,17,0.668,22,1.508,26,1.019,37,1.603,41,0.416,42,0.132,43,0.025,44,0.025,51,0.362,57,2.216,59,1.305,84,1.444,85,1.696,165,2.326,166,2.627,167,3.003,168,3.003,173,3.025,176,2.326,179,1.603,203,2.006,204,2.141,205,2.326,206,4.272,207,5.084,208,5.084,209,3.025,210,2.608,211,3.025,212,2.608,213,3.684,214,2.608,215,3.684,216,2.608,217,3.684,218,2.608,219,4.174,220,2.608,221,2.141,222,1.42]],["title/controllers/ProductsController.html",[45,1.625,223,1.834]],["body/controllers/ProductsController.html",[7,0.041,12,0.214,13,0.186,14,0.54,17,0.832,18,0.383,22,0.779,26,0.745,33,1.1,39,0.942,41,0.214,42,0.068,43,0.015,44,0.015,45,0.729,47,0.729,49,1.1,51,0.186,52,0.962,57,1.872,59,1.103,61,1.792,62,1.792,63,1.611,64,1.872,65,2.092,69,1.812,70,2.312,76,1.1,78,1.94,85,1.526,114,0.824,131,1.534,146,1.369,156,0.729,157,0.651,162,2.164,166,1.358,176,0.729,179,0.824,205,2.117,223,1.358,224,1.1,225,1.202,226,1.552,227,1.552,228,2.816,229,1.552,230,1.552,231,3.266,232,2.208,233,1.98,234,0.942,235,1.34,236,0.942,237,2.208,238,1.34,239,1.34,240,3.613,241,3.266,242,2.208,243,1.34,244,3.266,245,0.942,246,2.208,247,1.34,248,0.942,249,1.587,250,1.34,251,1.552,252,2.208,253,1.34,254,1.34,255,2.816,256,2.208,257,1.34,258,1.34,259,2.208,260,0.942,261,2.296,262,2.208,263,1.34,264,1.1,265,1.34,266,1.34,267,1.34,268,1.1,269,1.34,270,1.34,271,2.208,272,1.369,273,1.1,274,0.942,275,0.942,276,0.942,277,0.942,278,0.942,279,2.312,280,1.34,281,1.1,282,2.208,283,1.1,284,1.34,285,1.34,286,1.34,287,1.34,288,1.34,289,1.34,290,1.34,291,1.34,292,1.34,293,1.34,294,1.34,295,1.34,296,1.34,297,1.34,298,1.34,299,1.34,300,1.34,301,1.34,302,1.34,303,1.34,304,1.34,305,1.34,306,1.34,307,1.34,308,1.34,309,1.34,310,1.34,311,1.34,312,2.208,313,1.812,314,2.208,315,1.34,316,2.208,317,1.34,318,1.34,319,1.34,320,1.34,321,1.34,322,2.816,323,1.34,324,1.34,325,1.34,326,1.34,327,1.34,328,1.34,329,1.34,330,1.34,331,1.1,332,1.34,333,1.34,334,1.34,335,1.34]],["title/modules/ProductsModule.html",[0,1.45,8,1.625]],["body/modules/ProductsModule.html",[0,2.044,2,1.538,3,2.044,6,2.62,7,0.041,8,3.043,9,2.587,10,1.945,11,1.945,12,0.504,13,0.439,14,0.439,16,2.957,17,0.978,18,0.905,20,2.224,21,1.379,24,2.597,41,0.504,42,0.16,43,0.029,44,0.029,47,2.291,108,3.454,223,2.906,272,2.62,273,2.597,336,2.597,337,3.164,338,2.597,339,3.164,340,3.164,341,1.723,342,2.597,343,3.164]],["title/classes/ProductsRepository.html",[42,0.151,341,1.625]],["body/classes/ProductsRepository.html",[7,0.041,12,0.244,13,0.212,14,0.212,17,0.702,18,0.437,22,1.366,26,0.904,41,0.244,42,0.077,43,0.017,44,0.017,51,0.212,52,1.071,59,0.994,61,1.687,62,1.687,63,1.517,64,1.687,65,2.087,78,1.539,81,0.743,85,1.483,131,2.831,146,2.197,148,2.542,156,1.679,157,1.716,162,2.267,165,1.679,166,1.511,167,1.728,168,1.728,197,1.728,205,2.251,209,2.017,222,0.832,225,0.832,226,1.728,227,1.728,229,1.728,230,1.728,233,2.167,234,1.728,236,1.728,245,1.728,248,1.728,249,1.716,251,1.728,260,1.074,261,2.483,264,2.017,268,1.254,274,1.074,275,1.074,276,1.074,277,1.074,278,1.074,331,1.254,341,1.338,344,1.254,345,2.167,346,1.528,347,1.528,348,1.528,349,1.528,350,1.528,351,1.528,352,1.254,353,1.528,354,1.528,355,3.711,356,1.528,357,1.528,358,1.528,359,1.528,360,1.528,361,1.528,362,1.528,363,3.083,364,1.528,365,2.458,366,2.458,367,1.528,368,2.458,369,1.528,370,1.528,371,1.528,372,1.528,373,1.528,374,1.528,375,1.528,376,1.528,377,1.528,378,1.528,379,1.254,380,2.458,381,1.528,382,1.528,383,1.528,384,1.528,385,1.528,386,1.528,387,2.458,388,1.528,389,1.528,390,1.528,391,1.528,392,1.528,393,1.528,394,1.528,395,1.528,396,1.254,397,1.528]],["title/injectables/ProductsService.html",[128,1.3,272,1.45]],["body/injectables/ProductsService.html",[7,0.041,12,0.345,13,0.3,14,0.3,17,0.864,18,0.618,21,0.942,22,0.763,26,0.864,41,0.345,42,0.11,43,0.022,44,0.022,51,0.3,52,1.401,59,1.223,61,2.076,62,2.076,63,1.867,64,1.981,65,2.298,78,1.981,85,1.647,128,1.401,129,1.329,132,2.261,139,1.52,144,1.52,162,2.464,205,2.316,225,1.177,226,2.261,227,2.261,229,2.261,230,2.261,233,2.699,234,2.261,236,2.261,245,2.261,248,2.261,249,2.067,251,1.52,260,1.52,261,2.989,272,1.563,274,1.52,275,1.52,276,1.52,277,1.52,278,1.52,341,2.594,342,1.775,398,1.775,399,2.162,400,2.162,401,2.162,402,2.162,403,2.162,404,2.162,405,2.162,406,2.162,407,2.162,408,2.162,409,2.162,410,2.162,411,2.162]],["title/entities/User.html",[147,1.3,203,1.625]],["body/entities/User.html",[7,0.04,12,0.533,13,0.464,14,0.464,17,0.606,26,0.88,32,2.116,34,2.644,37,2.055,39,3.066,41,0.533,42,0.169,43,0.03,44,0.03,51,0.464,57,2.116,59,1.247,84,1.709,85,1.74,147,1.901,203,2.375,205,2.644,211,3.581,219,4.225,221,2.744,222,1.82,412,2.744,413,3.342,414,3.342,415,3.342,416,3.342,417,3.342]],["title/classes/UsersRepository.html",[42,0.151,111,1.45]],["body/classes/UsersRepository.html",[7,0.041,12,0.423,13,0.368,14,0.368,17,0.894,18,0.759,26,0.481,32,1.879,34,2.031,41,0.423,42,0.134,43,0.025,44,0.025,51,0.368,52,1.625,56,2.273,59,0.681,61,1.156,62,1.156,63,1.04,64,1.156,65,1.625,71,1.865,72,1.865,81,1.289,111,1.812,131,2.348,140,2.621,146,2.273,147,1.625,148,2.652,156,2.031,157,1.812,196,2.177,197,2.621,222,1.444,345,3.031,352,2.177,379,2.177,418,2.177,419,3.729,420,3.729,421,2.652,422,3.729,423,2.652,424,3.729,425,2.652,426,2.652,427,3.729,428,2.652,429,3.729,430,2.652,431,2.652,432,2.652,433,2.652,434,2.652,435,2.652,436,2.652,437,2.652,438,2.652,439,2.652,440,2.652]],["title/coverage.html",[441,2.843]],["body/coverage.html",[7,0.04,14,0.395,22,1.005,26,0.516,42,0.256,43,0.027,44,0.027,45,2.134,46,1.751,48,2.338,56,1.384,73,1.384,82,2.338,83,2.338,106,1.551,111,1.384,128,1.952,130,2.338,141,1.551,147,1.241,157,1.384,162,1.384,163,2.338,164,2.338,183,1.751,185,2.338,186,2.338,187,2.338,203,2.134,204,2.338,223,1.751,224,2.338,225,1.551,249,1.384,272,1.384,341,1.551,344,2.338,396,4.769,398,2.338,412,2.338,418,2.338,441,2.002,442,2.848,443,2.848,444,2.848,445,4.825,446,2.848,447,2.338,448,2.338,449,2.848,450,2.338,451,4.825,452,3.918,453,2.338,454,2.848,455,2.338,456,3.918,457,2.338,458,2.338,459,2.848,460,2.848,461,2.848,462,2.848]],["title/dependencies.html",[3,1.74,463,2.056]],["body/dependencies.html",[3,1.59,7,0.041,18,0.935,21,1.426,27,2.685,42,0.218,43,0.029,44,0.029,98,2.011,114,2.011,116,2.3,120,2.644,140,2.3,195,3.531,222,1.781,279,3.531,281,2.685,283,2.685,464,4.805,465,3.271,466,3.271,467,3.271,468,3.271,469,3.271,470,3.271,471,3.271,472,3.271,473,3.271,474,3.271,475,3.271,476,3.271,477,3.271,478,3.271,479,3.271,480,3.271,481,3.271,482,3.271,483,3.271,484,3.271,485,3.271,486,3.271,487,3.271,488,3.271,489,3.271,490,3.271,491,3.271]],["title/miscellaneous/enumerations.html",[492,1.217,493,2.939]],["body/miscellaneous/enumerations.html",[7,0.039,43,0.034,44,0.034,51,0.573,176,2.713,492,2.007,493,3.39,494,4.13,495,4.981,496,4.13,497,4.13,498,4.391,499,4.13,500,4.13,501,4.13,502,4.13,503,4.13]],["title/miscellaneous/functions.html",[492,1.217,504,2.939]],["body/miscellaneous/functions.html",[7,0.035,43,0.035,44,0.035,51,0.616,453,3.644,455,4.527,492,2.157,504,3.644,505,4.439]],["title/classes/getProductsFilterDto.html",[42,0.151,249,1.45]],["body/classes/getProductsFilterDto.html",[7,0.04,12,0.535,13,0.466,14,0.466,17,0.793,22,1.185,26,0.969,41,0.535,42,0.222,43,0.03,44,0.03,51,0.466,57,1.906,59,1.123,63,2.02,81,1.631,84,1.714,85,1.39,98,2.064,176,2.649,179,2.064,180,2.756,182,2.756,225,2.649,249,2.126,355,3.994,457,3.994,458,2.756,506,5.155,507,3.357,508,3.357,509,3.357]],["title/index.html",[51,0.348,510,2.505,511,2.505]],["body/index.html",[7,0.04,13,0.415,43,0.028,44,0.028,165,1.629,345,2.103,441,2.103,512,2.992,513,2.992,514,4.052,515,2.992,516,2.992,517,2.992,518,2.992,519,2.992,520,2.992,521,4.595,522,2.992,523,2.992,524,2.992,525,5.425,526,2.992,527,2.992,528,2.992,529,5.305,530,2.992,531,2.992,532,4.052,533,2.992,534,2.992,535,2.992,536,2.992,537,4.052,538,4.052,539,2.992,540,2.992,541,2.992,542,4.052,543,4.052,544,2.992,545,2.992,546,2.992,547,2.992,548,2.992,549,2.456,550,2.992,551,2.992,552,2.992,553,2.992,554,2.992,555,2.992,556,2.992,557,2.992,558,2.992,559,2.992,560,2.456,561,2.992,562,2.992,563,2.992,564,2.992,565,2.992,566,2.992,567,2.456]],["title/modules.html",[2,1.965]],["body/modules.html",[1,2.609,2,2.062,6,2.062,7,0.034,8,2.311,43,0.034,44,0.034,549,4.443,568,5.412,569,5.412,570,5.412]],["title/overview.html",[571,3.32]],["body/overview.html",[1,3.354,2,1.603,3,2.102,4,2.708,5,2.708,6,2.772,7,0.039,8,3.027,9,2.659,10,2.029,11,2.029,37,2.029,43,0.029,44,0.029,47,1.797,73,2.345,81,1.603,103,2.708,104,2.708,105,2.708,106,3.027,129,2.029,183,2.029,272,2.345,336,2.708,338,2.708,571,2.708,572,4.325,573,4.325,574,3.299,575,3.299]],["title/properties.html",[84,1.403,463,2.056]],["body/properties.html",[7,0.04,43,0.035,44,0.035,84,1.71,165,2.376,560,3.582,567,3.582,576,4.363,577,4.363,578,4.363]],["title/miscellaneous/variables.html",[492,1.217,579,2.939]],["body/miscellaneous/variables.html",[7,0.04,43,0.033,44,0.033,51,0.555,78,1.744,146,1.944,147,1.744,313,3.285,447,3.285,448,4.012,450,4.012,492,1.944,498,3.285,579,3.285,580,4.001,581,4.001,582,4.001,583,4.001,584,4.001,585,4.001,586,4.001,587,4.001]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":396,"title":{},"body":{"classes/ProductsRepository.html":{},"coverage.html":{}}}],["0.0.1",{"_index":577,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":575,"title":{},"body":{"overview.html":{}}}],["1.4.4",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["128",{"_index":215,"title":{},"body":{"entities/Product.html":{}}}],["2",{"_index":573,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["256",{"_index":213,"title":{},"body":{"entities/Product.html":{}}}],["3",{"_index":572,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":574,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["512",{"_index":209,"title":{},"body":{"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["7.2.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":320,"title":{},"body":{"controllers/ProductsController.html":{}}}],["accesstoken",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":439,"title":{},"body":{"classes/UsersRepository.html":{}}}],["amazing",{"_index":550,"title":{},"body":{"index.html":{}}}],["app",{"_index":527,"title":{},"body":{"index.html":{}}}],["appelle",{"_index":293,"title":{},"body":{"controllers/ProductsController.html":{}}}],["applications",{"_index":520,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["auth",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{}}}],["authcontroller",{"_index":46,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":56,"title":{"classes/AuthCredentialsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["authcreditentialsdto",{"_index":422,"title":{},"body":{"classes/UsersRepository.html":{}}}],["authguard",{"_index":284,"title":{},"body":{"controllers/ProductsController.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":560,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":73,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["avec",{"_index":366,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["await",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["backers",{"_index":551,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":264,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["badrequestexception(\"le",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{}}}],["bcrypt",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":428,"title":{},"body":{"classes/UsersRepository.html":{}}}],["bcrypt.hash(password",{"_index":430,"title":{},"body":{"classes/UsersRepository.html":{}}}],["body",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["bootstrap",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brackets",{"_index":351,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["brackets((qb",{"_index":359,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["browse",{"_index":570,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":568,"title":{},"body":{"modules.html":{}}}],["building",{"_index":515,"title":{},"body":{"index.html":{}}}],["caractères",{"_index":378,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["catalogue",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":433,"title":{},"body":{"classes/UsersRepository.html":{}}}],["cb",{"_index":314,"title":{},"body":{"controllers/ProductsController.html":{}}}],["cb(null",{"_index":322,"title":{},"body":{"controllers/ProductsController.html":{}}}],["check",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":42,"title":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"classes/getProductsFilterDto.html":{}}}],["classes",{"_index":81,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":336,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":337,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":338,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["column",{"_index":219,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["column('int",{"_index":217,"title":{},"body":{"entities/Product.html":{}}}],["column({type",{"_index":206,"title":{},"body":{"entities/Product.html":{}}}],["column({unique",{"_index":415,"title":{},"body":{"entities/User.html":{}}}],["computer",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["conflictexception",{"_index":423,"title":{},"body":{"classes/UsersRepository.html":{}}}],["conflictexception('username",{"_index":438,"title":{},"body":{"classes/UsersRepository.html":{}}}],["const",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["constructor(private",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productsrepository",{"_index":399,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(usersrepository",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":45,"title":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('products",{"_index":285,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controllers",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["coverage",{"_index":441,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createparamdecorator",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":226,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":303,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(createproductdto",{"_index":234,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":162,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createuser",{"_index":419,"title":{},"body":{"classes/UsersRepository.html":{}}}],["createuser(authcreditentialsdto",{"_index":420,"title":{},"body":{"classes/UsersRepository.html":{}}}],["credentials",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials.dto",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{}}}],["credentials.dto.ts",{"_index":83,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:15",{"_index":91,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:7",{"_index":93,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["data",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":321,"title":{},"body":{"controllers/ProductsController.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{}}}],["default",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["delete",{"_index":265,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:id",{"_index":237,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":227,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('id",{"_index":307,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":236,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":165,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{},"index.html":{},"properties.html":{}}}],["description.length",{"_index":369,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["destination",{"_index":311,"title":{},"body":{"controllers/ProductsController.html":{}}}],["development",{"_index":528,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":282,"title":{},"body":{"controllers/ProductsController.html":{}}}],["documentation",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["doublon",{"_index":437,"title":{},"body":{"classes/UsersRepository.html":{}}}],["dto/auth",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{}}}],["dto/create",{"_index":274,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["dto/get",{"_index":276,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["e2e",{"_index":539,"title":{},"body":{"index.html":{}}}],["editproductdto",{"_index":261,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["efficient",{"_index":516,"title":{},"body":{"index.html":{}}}],["entities",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"entities/Product.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":203,"title":{"entities/Product.html":{},"entities/User.html":{}},"body":{"entities/Product.html":{},"entities/User.html":{},"coverage.html":{}}}],["entityrepository",{"_index":352,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["entityrepository(product",{"_index":354,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["entityrepository(user",{"_index":425,"title":{},"body":{"classes/UsersRepository.html":{}}}],["enumerations",{"_index":493,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["er_dup_entry",{"_index":436,"title":{},"body":{"classes/UsersRepository.html":{}}}],["error",{"_index":434,"title":{},"body":{"classes/UsersRepository.html":{}}}],["error.code",{"_index":435,"title":{},"body":{"classes/UsersRepository.html":{}}}],["est",{"_index":372,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["excéder",{"_index":377,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["executioncontext",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":440,"title":{},"body":{"classes/UsersRepository.html":{}}}],["expiresin",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":279,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":255,"title":{},"body":{"controllers/ProductsController.html":{}}}],["extends",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["extractjwt",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fichier",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["file.originalname",{"_index":323,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|svg",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.split('.')[0",{"_index":315,"title":{},"body":{"controllers/ProductsController.html":{}}}],["file.originalname.split('.')[1",{"_index":317,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileext",{"_index":316,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filefilter",{"_index":324,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileinterceptor",{"_index":280,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileinterceptor('file",{"_index":309,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename.split('.').join('_",{"_index":319,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filepath",{"_index":259,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filter.dto",{"_index":277,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["filter.dto.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["filter.dto.ts:10",{"_index":507,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":509,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["filterdto",{"_index":251,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["filtre",{"_index":292,"title":{},"body":{"controllers/ProductsController.html":{}}}],["found",{"_index":363,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["framework",{"_index":514,"title":{},"body":{"index.html":{}}}],["function",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":504,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":246,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('img/:filename",{"_index":242,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('types",{"_index":252,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getimage",{"_index":228,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getimage(filename",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid",{"_index":229,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproductbyid(@param('id",{"_index":301,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":245,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproducts",{"_index":230,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproducts(@query",{"_index":288,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproducts(filterdto",{"_index":248,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["getproductsfilterdto",{"_index":249,"title":{"classes/getProductsFilterDto.html":{}},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["getproducttypes",{"_index":231,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getting",{"_index":510,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":546,"title":{},"body":{"index.html":{}}}],["hash",{"_index":426,"title":{},"body":{"classes/UsersRepository.html":{}}}],["hashedpassword",{"_index":429,"title":{},"body":{"classes/UsersRepository.html":{}}}],["here",{"_index":557,"title":{},"body":{"index.html":{}}}],["host",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:3000/img/${file.filename",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["https://nestjs.com",{"_index":564,"title":{},"body":{"index.html":{}}}],["id",{"_index":205,"title":{},"body":{"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{}}}],["identifier",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":166,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["image')@useinterceptors(undefined",{"_index":257,"title":{},"body":{"controllers/ProductsController.html":{}}}],["img",{"_index":312,"title":{},"body":{"controllers/ProductsController.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["injectable",{"_index":128,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["injectrepository(productsrepository",{"_index":406,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(usersrepository",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["installation",{"_index":524,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":526,"title":{},"body":{"index.html":{}}}],["interface",{"_index":183,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":184,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["internalservererrorexception",{"_index":424,"title":{},"body":{"classes/UsersRepository.html":{}}}],["introuvable",{"_index":368,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["isenum",{"_index":180,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/getProductsFilterDto.html":{}}}],["isenum(producttype",{"_index":182,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/getProductsFilterDto.html":{}}}],["isnotempty",{"_index":169,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnotempty()@isenum(producttype",{"_index":177,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnotempty()@isnumberstring",{"_index":174,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumberstring",{"_index":181,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":506,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["isoptional()@isenum(producttype",{"_index":508,"title":{},"body":{"classes/getProductsFilterDto.html":{}}}],["isstring",{"_index":94,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["isstring()@minlength(8)@maxlength(20",{"_index":92,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["isstring()@minlength(8)@maxlength(32)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":86,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["join",{"_index":553,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":141,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":106,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":561,"title":{},"body":{"index.html":{}}}],["l'id",{"_index":397,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["l\\'id",{"_index":367,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["la",{"_index":370,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["length",{"_index":208,"title":{},"body":{"entities/Product.html":{}}}],["les",{"_index":298,"title":{},"body":{"controllers/ProductsController.html":{}}}],["libelle",{"_index":167,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["license",{"_index":567,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":543,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["longue",{"_index":374,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["matches",{"_index":95,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":102,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["matching",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":96,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["maxlength(20",{"_index":100,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["maxlength(32",{"_index":101,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["message",{"_index":89,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["metadata",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["minlength",{"_index":97,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["minlength(8",{"_index":99,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["miscellaneous",{"_index":492,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":542,"title":{},"body":{"index.html":{}}}],["mode",{"_index":532,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":556,"title":{},"body":{"index.html":{}}}],["multer",{"_index":283,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["mysql",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":562,"title":{},"body":{"index.html":{}}}],["n'est",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["name",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["ne",{"_index":376,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["nest",{"_index":521,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":566,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":281,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["new",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["newfilename",{"_index":318,"title":{},"body":{"controllers/ProductsController.html":{}}}],["newproduct",{"_index":382,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.description",{"_index":386,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.image",{"_index":387,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.libelle",{"_index":384,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.quantite",{"_index":392,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["newproduct.type",{"_index":390,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["node.js",{"_index":513,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":353,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["notfoundexception(`produit",{"_index":365,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["npm",{"_index":525,"title":{},"body":{"index.html":{}}}],["number",{"_index":173,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["object.values(producttype",{"_index":287,"title":{},"body":{"controllers/ProductsController.html":{}}}],["open",{"_index":544,"title":{},"body":{"index.html":{}}}],["optional",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["ordinateur",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orwhere('product.description",{"_index":361,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":463,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":266,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('filename",{"_index":334,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('id",{"_index":305,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["pas",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["passport",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{}}}],["patch",{"_index":267,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:id",{"_index":262,"title":{},"body":{"controllers/ProductsController.html":{}}}],["payload",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":186,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["phone",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":554,"title":{},"body":{"index.html":{}}}],["port",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["post('/signin",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":256,"title":{},"body":{"controllers/ProductsController.html":{}}}],["prefix",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["primarygeneratedcolumn",{"_index":221,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":211,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["private",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":22,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["product.description",{"_index":385,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.dto",{"_index":275,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["product.dto.ts",{"_index":164,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":171,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:15",{"_index":178,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:19",{"_index":175,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:6",{"_index":172,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:9",{"_index":170,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":278,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["product.image",{"_index":388,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.libelle",{"_index":383,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.quantite",{"_index":391,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["product.type",{"_index":389,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["production",{"_index":534,"title":{},"body":{"index.html":{}}}],["products",{"_index":225,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["products.controller",{"_index":340,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.repository",{"_index":342,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":273,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/product.entity",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["products/products.module",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":223,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":8,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepository",{"_index":341,"title":{"classes/ProductsRepository.html":{}},"body":{"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsservice",{"_index":272,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productsservice.getproductswithfilters",{"_index":294,"title":{},"body":{"controllers/ProductsController.html":{}}}],["producttype",{"_index":176,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"miscellaneous/enumerations.html":{},"classes/getProductsFilterDto.html":{}}}],["produits",{"_index":299,"title":{},"body":{"controllers/ProductsController.html":{}}}],["progressive",{"_index":512,"title":{},"body":{"index.html":{}}}],["project",{"_index":545,"title":{},"body":{"index.html":{}}}],["promise",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["properties",{"_index":84,"title":{"properties.html":{}},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"entities/Product.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{},"properties.html":{}}}],["proposée",{"_index":371,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["providers",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["qb.where('product.libelle",{"_index":360,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["quantite",{"_index":168,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"classes/ProductsRepository.html":{}}}],["query",{"_index":268,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{}}}],["query.andwhere",{"_index":358,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["query.andwhere('product.type",{"_index":357,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["query.getmany",{"_index":362,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["read",{"_index":555,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":345,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{},"index.html":{}}}],["req",{"_index":313,"title":{},"body":{"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":240,"title":{},"body":{"controllers/ProductsController.html":{}}}],["res.sendfile(filename",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["response",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["result",{"_index":393,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["result.affected",{"_index":395,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["results",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getProductsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":296,"title":{},"body":{"controllers/ProductsController.html":{}}}],["return",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"classes/UsersRepository.html":{}}}],["rimraf",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductsController.html":{}}}],["run",{"_index":529,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["s'il",{"_index":289,"title":{},"body":{"controllers/ProductsController.html":{}}}],["salt",{"_index":427,"title":{},"body":{"classes/UsersRepository.html":{}}}],["scalable",{"_index":517,"title":{},"body":{"index.html":{}}}],["search",{"_index":355,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/getProductsFilterDto.html":{}}}],["secret",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sendimage",{"_index":232,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sendimage(@uploadedfile",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sendimage(file",{"_index":254,"title":{},"body":{"controllers/ProductsController.html":{}}}],["server",{"_index":518,"title":{},"body":{"index.html":{}}}],["side",{"_index":519,"title":{},"body":{"index.html":{}}}],["signin",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(authcredentialsdto",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signoptions",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(authcredentialsdto",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["sinon",{"_index":295,"title":{},"body":{"controllers/ProductsController.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"classes/getProductsFilterDto.html":{},"index.html":{}}}],["sponsors",{"_index":548,"title":{},"body":{"index.html":{}}}],["src/.../get",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":82,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["src/auth/get",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":185,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:21",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/user.entity.ts",{"_index":412,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/auth/user.entity.ts:12",{"_index":414,"title":{},"body":{"entities/User.html":{}}}],["src/auth/user.entity.ts:6",{"_index":413,"title":{},"body":{"entities/User.html":{}}}],["src/auth/user.entity.ts:9",{"_index":416,"title":{},"body":{"entities/User.html":{}}}],["src/auth/users.repository.ts",{"_index":418,"title":{},"body":{"classes/UsersRepository.html":{},"coverage.html":{}}}],["src/auth/users.repository.ts:12",{"_index":421,"title":{},"body":{"classes/UsersRepository.html":{}}}],["src/main.ts",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/dto/create",{"_index":163,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dto/get",{"_index":457,"title":{},"body":{"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["src/products/product",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/products/product.entity.ts",{"_index":204,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:10",{"_index":216,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:13",{"_index":210,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:16",{"_index":214,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:19",{"_index":220,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:22",{"_index":218,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:7",{"_index":212,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":224,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:32",{"_index":253,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:37",{"_index":250,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:44",{"_index":247,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:49",{"_index":235,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:54",{"_index":263,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:62",{"_index":238,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:87",{"_index":258,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:98",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":339,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.repository.ts",{"_index":344,"title":{},"body":{"classes/ProductsRepository.html":{},"coverage.html":{}}}],["src/products/products.repository.ts:32",{"_index":348,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:42",{"_index":346,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:63",{"_index":350,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:80",{"_index":347,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.repository.ts:9",{"_index":349,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["src/products/products.service.ts",{"_index":398,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:15",{"_index":404,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:19",{"_index":403,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:23",{"_index":401,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:27",{"_index":405,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:34",{"_index":402,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:9",{"_index":400,"title":{},"body":{"injectables/ProductsService.html":{}}}],["start",{"_index":530,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":533,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":535,"title":{},"body":{"index.html":{}}}],["started",{"_index":511,"title":{"index.html":{}},"body":{}}],["starter",{"_index":523,"title":{},"body":{"index.html":{}}}],["statements",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":558,"title":{},"body":{"index.html":{}}}],["storage",{"_index":310,"title":{},"body":{"controllers/ProductsController.html":{}}}],["strategy",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":85,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/getProductsFilterDto.html":{}}}],["success",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":549,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":569,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tablette",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":538,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":541,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":540,"title":{},"body":{"index.html":{}}}],["tests",{"_index":537,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":547,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(authcredentialsdto",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(authcredentialsdto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.create",{"_index":379,"title":{},"body":{"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["this.createquerybuilder('product').where('1",{"_index":356,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.delete(id",{"_index":394,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.findone(id",{"_index":364,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.getproductbyid(id",{"_index":381,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.productsrepository.createproduct(createproductdto",{"_index":409,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.deleteproduct(id",{"_index":411,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.getproductbyid(id",{"_index":408,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.getproducts(filterdto",{"_index":407,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.updateproduct(id",{"_index":410,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":304,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":308,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproductbyid(id",{"_index":302,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproducts(filterdto",{"_index":300,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(id",{"_index":306,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.save(product",{"_index":380,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["this.save(user",{"_index":432,"title":{},"body":{"classes/UsersRepository.html":{}}}],["this.usersrepository.createuser(authcredentialsdto",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersrepository.findone",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["throw",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"classes/UsersRepository.html":{}}}],["top",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":559,"title":{},"body":{"index.html":{}}}],["tous",{"_index":297,"title":{},"body":{"controllers/ProductsController.html":{}}}],["transformer",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["trop",{"_index":373,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["true",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductsController.html":{},"entities/User.html":{}}}],["try",{"_index":431,"title":{},"body":{"classes/UsersRepository.html":{}}}],["tslib",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":565,"title":{},"body":{"index.html":{}}}],["type",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"classes/getProductsFilterDto.html":{}}}],["type.enum",{"_index":179,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/getProductsFilterDto.html":{}}}],["type.enum.ts",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":222,"title":{},"body":{"entities/Product.html":{},"classes/ProductsRepository.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productsrepository",{"_index":343,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([usersrepository",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["types/passport",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":522,"title":{},"body":{"index.html":{}}}],["téléphone",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["un",{"_index":291,"title":{},"body":{"controllers/ProductsController.html":{}}}],["unauthorizedexception",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('please",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{}}}],["unique",{"_index":417,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":536,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":578,"title":{},"body":{"properties.html":{}}}],["updateproduct",{"_index":233,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(id",{"_index":260,"title":{},"body":{"controllers/ProductsController.html":{},"classes/ProductsRepository.html":{},"injectables/ProductsService.html":{}}}],["uploadedfile",{"_index":269,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards",{"_index":270,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(authguard",{"_index":286,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useinterceptors",{"_index":271,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":147,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"classes/UsersRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UsersRepository.html":{}}}],["user.password",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"classes/UsersRepository.html":{}}}],["users.repository",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersrepository",{"_index":111,"title":{"classes/UsersRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UsersRepository.html":{},"coverage.html":{}}}],["uuid",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":98,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateProductDto.html":{},"dependencies.html":{},"classes/getProductsFilterDto.html":{}}}],["value",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":207,"title":{},"body":{"entities/Product.html":{}}}],["variable",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":579,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":576,"title":{},"body":{"properties.html":{}}}],["veuillez",{"_index":375,"title":{},"body":{"classes/ProductsRepository.html":{}}}],["watch",{"_index":531,"title":{},"body":{"index.html":{}}}],["weak",{"_index":90,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["website",{"_index":563,"title":{},"body":{"index.html":{}}}],["y",{"_index":290,"title":{},"body":{"controllers/ProductsController.html":{}}}],["you'd",{"_index":552,"title":{},"body":{"index.html":{}}}],["z",{"_index":88,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["z])(?=.*[a",{"_index":87,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsModule } from './products/products.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './products/product.entity';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: '',\n      database: 'catalogue',\n      entities: [Product],\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    AuthModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signIn\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('/signup')\n  signUp(@Body() authCredentialsDto: AuthCredentialsDto): Promise {\n    return this.authService.signUp(authCredentialsDto);\n  }\n\n  @Post('/signin')\n  signIn(\n    @Body() authCredentialsDto: AuthCredentialsDto,\n  ): Promise {\n    return this.authService.signIn(authCredentialsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDto.html":{"url":"classes/AuthCredentialsDto.html","title":"class - AuthCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(32)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-credentials.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-credentials.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Matches, MaxLength, MinLength } from 'class-validator';\n\nexport class AuthCredentialsDto {\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  username: string;\n\n  @IsString()\n  @MinLength(8)\n  @MaxLength(32)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersRepository } from './users.repository';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: 'top-secret',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    TypeOrmModule.forFeature([UsersRepository]),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersRepository } from './users.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UsersRepository)\n    private usersRepository: UsersRepository,\n    private jwtService: JwtService,\n  ) {}\n\n  async signUp(authCredentialsDto: AuthCredentialsDto): Promise {\n    return this.usersRepository.createUser(authCredentialsDto);\n  }\n\n  async signIn(\n    authCredentialsDto: AuthCredentialsDto,\n  ): Promise {\n    const { username, password } = authCredentialsDto;\n    const user = await this.usersRepository.findOne({ username });\n\n    if (user && (await bcrypt.compare(password, user.password))) {\n      // return 'success';\n      const payload: JwtPayload = { username };\n      const accessToken: string = this.jwtService.sign(payload);\n      return { accessToken };\n    } else {\n      throw new UnauthorizedException('Please check your login credentials');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                libelle\n                            \n                            \n                                quantite\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ProductType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductType } from '../product-type.enum';\nimport { IsEnum, IsNotEmpty, IsNumberString } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsNotEmpty()\n  libelle: string;\n\n  @IsNotEmpty()\n  description: string;\n\n  image: string;\n\n  @IsNotEmpty()\n  @IsEnum(ProductType)\n  type: ProductType;\n\n  @IsNotEmpty()\n  @IsNumberString()\n  quantite: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersRepository } from './users.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JwtPayload } from './jwt-payload.interface';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UsersRepository)\n    private usersRepository: UsersRepository,\n  ) {\n    super({\n      secretOrKey: 'top-secret',\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const { username } = payload;\n    const user: User = await this.usersRepository.findOne({ username });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                libelle\n                            \n                            \n                                quantite\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 512})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 256})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ProductType } from './product-type.enum';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'varchar', length: 128 })\n  libelle: string;\n\n  @Column({ type: 'varchar', length: 512 })\n  description: string;\n\n  @Column({ type: 'varchar', length: 256 })\n  image: string;\n\n  @Column()\n  type: ProductType;\n\n  @Column('int')\n  quantite: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                    Async\n                                getImage\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                getProductTypes\n                            \n                            \n                                sendImage\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(filename, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('img/:filename')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(filterDto: getProductsFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductTypes\n                        \n                    \n                \n            \n            \n                \ngetProductTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('types')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendImage\n                        \n                    \n                \n            \n            \n                \nsendImage(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-image')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { filepath: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\nimport { Product } from './product.entity';\nimport { ProductType } from './product-type.enum';\nimport { Express, Response } from 'express';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('products')\n@UseGuards(AuthGuard())\nexport class ProductsController {\n  constructor(private productsService: ProductsService) {}\n\n  @Get('types')\n  getProductTypes(): string[] {\n    return Object.values(ProductType);\n  }\n\n  @Get()\n  getProducts(@Query() filterDto: getProductsFilterDto): Promise {\n    // s'il y a un filtre, appelle productsService.getProductsWithFilters\n    // sinon, retourne tous les produits\n    return this.productsService.getProducts(filterDto);\n  }\n\n  @Get('/:id')\n  getProductById(@Param('id') id: string): Promise {\n    return this.productsService.getProductById(id);\n  }\n\n  @Post()\n  createProduct(@Body() createProductDto: CreateProductDto): Promise {\n    return this.productsService.createProduct(createProductDto);\n  }\n\n  @Patch('/:id')\n  updateProduct(\n    @Param('id') id: string,\n    @Body() editProductDto: CreateProductDto,\n  ): Promise {\n    return this.productsService.updateProduct(id, editProductDto);\n  }\n\n  @Delete('/:id')\n  deleteProduct(@Param('id') id: string): Promise {\n    return this.productsService.deleteProduct(id);\n  }\n\n  @Post('upload-image')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: './img',\n        filename: (req, file, cb) => {\n          /*const filename = file.originalname.split('.')[0];\n          const fileExt = file.originalname.split('.')[1];\n          const newFileName =\n            filename.split('.').join('_') + '_' + Date.now() + '.' + fileExt;\n          */\n          cb(null, file.originalname);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (!file.originalname.match(/\\.(jpg|jpeg|png|svg)$/))\n          return cb(null, false);\n        return cb(null, true);\n      },\n    }),\n  )\n  sendImage(@UploadedFile() file: Express.Multer.File) {\n    if (!file) {\n      throw new BadRequestException(\"Le fichier n'est pas une image\");\n    } else {\n      return {\n        filepath: `http://localhost:3000/img/${file.filename}`,\n      };\n    }\n  }\n\n  @Get('img/:filename')\n  async getImage(\n    @Param('filename') filename,\n    @Res() res: Response,\n  ): Promise {\n    res.sendFile(filename, { root: './img' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nAuthModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsRepository } from './products.repository';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductsRepository]), AuthModule],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsRepository.html":{"url":"classes/ProductsRepository.html","title":"class - ProductsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts(filterDto: getProductsFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.repository.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Brackets, EntityRepository, Repository } from 'typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\n\n@EntityRepository(Product)\nexport class ProductsRepository extends Repository {\n  async getProducts(filterDto: getProductsFilterDto): Promise {\n    const { type, search } = filterDto;\n    const query = this.createQueryBuilder('product').where('1');\n\n    if (type) {\n      query.andWhere('product.type = :type', { type: type });\n    }\n\n    if (search) {\n      query.andWhere(\n        new Brackets((qb) => {\n          qb.where('product.libelle LIKE :search', {\n            search: `%${search}%`,\n          }).orWhere('product.description LIKE :search', {\n            search: `%${search}%`,\n          });\n        }),\n      );\n    }\n\n    return await query.getMany();\n  }\n\n  async getProductById(id: string): Promise {\n    const found = await this.findOne(id);\n\n    if (!found) {\n      throw new NotFoundException(`Produit avec l\\'ID '${id}' introuvable`);\n    } else {\n      return found;\n    }\n  }\n\n  async createProduct(createProductDto: CreateProductDto): Promise {\n    const { libelle, description, image, type, quantite } = createProductDto;\n\n    if (description.length > 512) {\n      throw new BadRequestException(\n        `La description proposée est trop longue. Veuillez ne pas excéder 512 caractères`,\n      );\n    } else {\n      const product = this.create({\n        libelle,\n        description,\n        image,\n        type,\n        quantite,\n      });\n\n      await this.save(product);\n      return product;\n    }\n  }\n\n  async updateProduct(\n    id: string,\n    editProductDto: CreateProductDto,\n  ): Promise {\n    const product = await this.getProductById(id);\n    const newProduct = editProductDto;\n    product.libelle = newProduct.libelle;\n    product.description = newProduct.description;\n    if (newProduct.image !== '') {\n      product.image = newProduct.image;\n    }\n    product.type = newProduct.type;\n    product.quantite = newProduct.quantite;\n    await this.save(product);\n    return product;\n  }\n\n  async deleteProduct(id: string): Promise {\n    const result = await this.delete(id);\n\n    if (result.affected === 0) {\n      throw new NotFoundException(`Produit avec l'ID '${id}' introuvable.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(filterDto: getProductsFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                getProductsFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, editProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { getProductsFilterDto } from './dto/get-products-filter.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsRepository } from './products.repository';\nimport { Product } from './product.entity';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(ProductsRepository)\n    private productsRepository: ProductsRepository,\n  ) {}\n\n  getProducts(filterDto: getProductsFilterDto): Promise {\n    return this.productsRepository.getProducts(filterDto);\n  }\n\n  getProductById(id: string): Promise {\n    return this.productsRepository.getProductById(id);\n  }\n\n  createProduct(createProductDto: CreateProductDto): Promise {\n    return this.productsRepository.createProduct(createProductDto);\n  }\n\n  updateProduct(\n    id: string,\n    editProductDto: CreateProductDto,\n  ): Promise {\n    return this.productsRepository.updateProduct(id, editProductDto);\n  }\n\n  deleteProduct(id: string): Promise {\n    return this.productsRepository.deleteProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  username: string;\n\n  @Column()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersRepository.html":{"url":"classes/UsersRepository.html","title":"class - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(authCreditentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/users.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCreditentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport {\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@EntityRepository(User)\nexport class UsersRepository extends Repository {\n  async createUser(authCreditentialsDto: AuthCredentialsDto): Promise {\n    const { username, password } = authCreditentialsDto;\n\n    // Hash\n    const salt = await bcrypt.genSalt();\n    const hashedPassword = await bcrypt.hash(password, salt);\n\n    const user = this.create({ username, password: hashedPassword });\n\n    try {\n      await this.save(user);\n    } catch (error) {\n      if (error.code === 'ER_DUP_ENTRY') {\n        // Doublon username\n        throw new ConflictException('Username already exists');\n      } else {\n        throw new InternalServerErrorException();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-credentials.dto.ts\n            \n            class\n            AuthCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/users.repository.ts\n            \n            class\n            UsersRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dto/get-products-filter.dto.ts\n            \n            class\n            getProductsFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/products/products.repository.ts\n            \n            class\n            ProductsRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.4\n        \n            @types/passport-jwt : ^3.0.6\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            express : ^4.18.1\n        \n            multer : ^1.4.4\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.5.3\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            tslib : ^2.4.0\n        \n            typeorm : ^0.2.32\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductType   (src/.../product-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/products/product-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductType\n                    \n                \n                        \n                            \n                                 COMPUTER\n                            \n                        \n                        \n                            \n                                Value : Ordinateur\n                            \n                        \n                        \n                            \n                                 PHONE\n                            \n                        \n                        \n                            \n                                Value : Téléphone\n                            \n                        \n                        \n                            \n                                 TABLET\n                            \n                        \n                        \n                            \n                                Value : Tablette\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/getProductsFilterDto.html":{"url":"classes/getProductsFilterDto.html","title":"class - getProductsFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  getProductsFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/get-products-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/get-products-filter.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/get-products-filter.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductType } from '../product-type.enum';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport class getProductsFilterDto {\n  @IsOptional()\n  @IsEnum(ProductType)\n  type?: ProductType;\n\n  @IsOptional()\n  search?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nAuthModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data, context: ExecutionContext): User => {\n    const req = context.switchToHttp().getRequest();\n    return req.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
